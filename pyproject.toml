[tool.poetry]
name = "cheddarr"
version = "0.1.0"
description = "Hub for media server architecture"
authors = ["Jeroli-co"]
license = "GNU GPL v3"


[tool.poetry.dependencies]
python = "^3.11.2"
aiofiles = "^23.1.0"
alembic = "^1.11.1"
appdirs = "^1.4.4"
APScheduler = "^3.10.1"
asgiref = "^3.7.2"
asyncclick = "^8.1.3.4"
fastapi = "^0.100.0"
emails = "^0.6"
email-validator = "^2.0.0.post2"
gunicorn = "^21.2.0"
httpx = "^0.24.1"
itsdangerous = "^2.1.2"
Jinja2 = "^3.1.2"
loguru = "^0.7.0"
passlib =  {version = "^1.7.4", extras = ["bcrypt"]}
PlexAPI = "^4.14.0"
pydantic = "^2.0.3"
PyJWT = {version = "^2.8.0",  extras = ["crypto"]}
SQLAlchemy = {version = "^2.0.19", extras = ["aiosqlite"]}
uvicorn = "^0.23.1"
python-multipart = "^0.0.6"
greenlet = "^2.0.2"
async-asgi-testclient = "^1.4.11"
pydantic-settings = "^2.0.2"


[tool.poetry.group.dev.dependencies]
autoflake = "^2.2.0"
black = "^23.7.0"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
types-pytz = "^2023.3.0.0"
mypy = "^1.4.1"
ruff = "^0.0.278"
types-passlib = "^1.7.7.12"
types-cachetools = "^5.3.0.6"
devtools = "^0.11.0"

[tool.pyright]
include = ["server"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
select = ["ALL"]
ignore = [
    "A", "D", "S", "EM", "PGH",  "FBT", "FIX", "ANN101", "ANN102", "ANN401", "B008", "PLR0913", "PLR2004", "RUF012",
    "TCH001", "TCH002", "TCH003", "TRY003", "C901", "PLR0912", "TD002", "TD003"
]
extend-exclude = ["server/database/migrations", "server/tests/conftest.py"]
line-length = 120

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.black]
line-length = 120
force-exclude = '''
(
  /(
      \.git
    | \.venv
    | venv
    | build
    | migrations
  )/
)
'''


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
