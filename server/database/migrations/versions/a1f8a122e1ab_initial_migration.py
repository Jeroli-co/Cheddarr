"""initial migration

Revision ID: a1f8a122e1ab
Revises: 
Create Date: 2023-07-21 20:04:49.766997

"""
from alembic import op
import sqlalchemy as sa

from server.models.base import UtcDateTime

# revision identifiers, used by Alembic.
revision = 'a1f8a122e1ab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tmdb_id', sa.Integer(), nullable=True),
    sa.Column('imdb_id', sa.String(), nullable=True),
    sa.Column('tvdb_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('media_type', sa.Enum('movie', 'series', name='mediatype'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media')),
    sa.UniqueConstraint('imdb_id', 'media_type', name=op.f('uq_media_imdb_id')),
    sa.UniqueConstraint('tmdb_id', 'media_type', name=op.f('uq_media_tmdb_id')),
    sa.UniqueConstraint('tvdb_id', 'media_type', name=op.f('uq_media_tvdb_id'))
    )
    op.create_table('media_provider_setting',
    sa.Column('provider_type', sa.Enum('movie_provider', 'series_provider', name='mediaprovidertype'), nullable=False),
    sa.Column('root_folder', sa.String(), nullable=False),
    sa.Column('quality_profile_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('service_name', sa.String(), nullable=False),
    sa.Column('host', sa.String(), nullable=False),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ssl', sa.Boolean(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('anime_root_folder', sa.String(), nullable=True),
    sa.Column('anime_quality_profile_id', sa.Integer(), nullable=True),
    sa.Column('anime_tags', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_provider_setting'))
    )
    op.create_table('media_server_setting',
    sa.Column('server_id', sa.String(), nullable=False),
    sa.Column('server_name', sa.String(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('service_name', sa.String(), nullable=False),
    sa.Column('host', sa.String(), nullable=False),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ssl', sa.Boolean(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_server_setting')),
    sa.UniqueConstraint('server_id', name=op.f('uq_media_server_setting_server_id'))
    )
    op.create_table('notification_agent',
    sa.Column('name', sa.Enum('email', name='agent'), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('name', name=op.f('pk_notification_agent'))
    )
    op.create_table('token',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('data', sa.String(), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('max_age', sa.Integer(), nullable=True),
    sa.Column('created_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.Column('updated_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('plex_user_id', sa.Integer(), nullable=True),
    sa.Column('plex_api_key', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('roles', sa.Integer(), nullable=False),
    sa.Column('created_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.Column('updated_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('plex_user_id', name=op.f('uq_user_plex_user_id'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('media_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_type', sa.Enum('movie', 'series', name='mediatype'), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('requesting_user_id', sa.Integer(), nullable=False),
    sa.Column('selected_provider_id', sa.String(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('root_folder', sa.String(), nullable=True),
    sa.Column('quality_profile_id', sa.Integer(), nullable=True),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'refused', 'available', name='requeststatus'), nullable=False),
    sa.Column('created_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.Column('updated_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name=op.f('fk_media_request_media_id_media')),
    sa.ForeignKeyConstraint(['requesting_user_id'], ['user.id'], name=op.f('fk_media_request_requesting_user_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['selected_provider_id'], ['media_provider_setting.id'], name=op.f('fk_media_request_selected_provider_id_media_provider_setting')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_request'))
    )
    op.create_table('media_server_library',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('setting_id', sa.String(), nullable=False),
    sa.Column('library_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['setting_id'], ['media_server_setting.id'], name=op.f('fk_media_server_library_setting_id_media_server_setting'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_server_library'))
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=False),
    sa.Column('created_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.Column('updated_at', UtcDateTime(timezone=True), server_default=sa.text("(STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_notification_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notification'))
    )
    op.create_table('media_server_media',
    sa.Column('server_library_id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.String(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name=op.f('fk_media_server_media_media_id_media'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['server_id'], ['media_server_setting.server_id'], name=op.f('fk_media_server_media_server_id_media_server_setting')),
    sa.ForeignKeyConstraint(['server_library_id'], ['media_server_library.id'], name=op.f('fk_media_server_media_server_library_id_media_server_library'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_server_media')),
    sa.UniqueConstraint('external_id', name=op.f('uq_media_server_media_external_id'))
    )
    op.create_table('season_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_number', sa.Integer(), nullable=False),
    sa.Column('series_request_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'refused', 'available', name='requeststatus'), nullable=False),
    sa.ForeignKeyConstraint(['series_request_id'], ['media_request.id'], name=op.f('fk_season_request_series_request_id_media_request'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_season_request'))
    )
    op.create_table('episode_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('episode_number', sa.Integer(), nullable=False),
    sa.Column('season_request_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'refused', 'available', name='requeststatus'), nullable=False),
    sa.ForeignKeyConstraint(['season_request_id'], ['season_request.id'], name=op.f('fk_episode_request_season_request_id_season_request'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_episode_request'))
    )
    op.create_table('media_server_season',
    sa.Column('season_number', sa.Integer(), nullable=False),
    sa.Column('server_media_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.String(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['media_server_setting.server_id'], name=op.f('fk_media_server_season_server_id_media_server_setting')),
    sa.ForeignKeyConstraint(['server_media_id'], ['media_server_media.id'], name=op.f('fk_media_server_season_server_media_id_media_server_media'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_server_season')),
    sa.UniqueConstraint('external_id', name=op.f('uq_media_server_season_external_id'))
    )
    op.create_table('media_server_episode',
    sa.Column('episode_number', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.String(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['season_id'], ['media_server_season.id'], name=op.f('fk_media_server_episode_season_id_media_server_season'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['server_id'], ['media_server_setting.server_id'], name=op.f('fk_media_server_episode_server_id_media_server_setting')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_server_episode')),
    sa.UniqueConstraint('external_id', name=op.f('uq_media_server_episode_external_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('media_server_episode')
    op.drop_table('media_server_season')
    op.drop_table('episode_request')
    op.drop_table('season_request')
    op.drop_table('media_server_media')
    op.drop_table('notification')
    op.drop_table('media_server_library')
    op.drop_table('media_request')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('token')
    op.drop_table('notification_agent')
    op.drop_table('media_server_setting')
    op.drop_table('media_provider_setting')
    op.drop_table('media')
    # ### end Alembic commands ###
